ExpressionList -> Expression { comma Expression }

Expression -> PrefixExpression [ BinaryExpressions ]

PrefixExpression -> [ PrefixOps ] PostfixExpression | InOutExpression

InOutExpression -> & Identifier

BinaryExpressions -> BinaryExpression { BinaryExpression }

BinaryExpression -> ( BinaryOp | AssignmentOp | ConditionalOp ) PrefixExpression

PrimaryExpression -> LiteralExpression | SelfExpression | SuperclassExpression | ParenthesizedExpression | ImplicitMemberExpression | WildcardExpression

LiteralExpression -> Literal | ArrayDictionary | SpecialLiteral

SpecialLiteral -> __FILE__ | __LINE__ | __COLUMN__ | __FUNCTION__

ArrayDictionary -> lsb ArrayDictionaryLiteral

ArrayDictionaryLiteral -> ArrayDictionaryLiteralItems | closedict | rsb

ArrayDictionaryLiteralItems -> ArrayDictionaryLiteralItem { comma ArrayDictionaryLiteralItem }

ArrayDictionaryLiteralItem -> Expression ( ArrayItem | DictionaryItem )

ArrayItem -> rsb

DictionaryItem -> colon Expression rsb

SelfExpression -> self [ Self' ]
Self' -> . PostDotSelf | lsb Expression rsb
PostDotSelf -> Identifier | init

SuperclassExpression -> super Super'
Super' -> lsb Expression rsb | . PostDotSuper
PostDotSuper -> Identifier | init

ImplicitMemberExpression -> . Identifier

ParenthesizedExpression -> lp [ ExpressionElementList ] rp

ExpressionElementList -> ExpressionElement { comma ExpressionElement }

ExpressionElement -> Expression | Identifier : Expression

WildcardExpression -> _

PostfixExpression -> PrimaryExpression [ Post ]

Post -> PostfixOps | FunctionCallExpression | . PostPostDot | SubscriptExpression | ForcedValueExpression | OptionalChainingExpression

PostPostDot -> InitializerExpression | ExplicitMemberExpression | PostfixSelfExpression | DynamicTypeExpression

FunctionCallExpression -> ParenthesizedExpression

InitializerExpression -> init

ExplicitMemberExpression -> number

PostfixSelfExpression -> self

DynamicTypeExpression -> dynamicType

SubscriptExpression -> lsb ExpressionList rsb

ForcedValueExpression -> !

OptionalChainingExpression -> ?

BinaryOp -> Ternary

Ternary -> NilCoalescing [ TernaryOp Expression : Expression ]

NilCoalescing -> Disjunctive { NilCoalescingOp Disjunctive }

Disjunctive -> Conjuctive { DisjunctiveOp Conjuctive }

Conjuctive -> Comparative { ConjunctiveOp Comparative }

Comparative -> Cast { ComparativeOp Cast }

Cast -> Range { CastOp Range }

Range -> Additive { RangeOp Additive }

Additive -> Multiplicative { AdditiveOp Multiplicative }

Multiplicative -> Exponentiative { MultiplicativeOp Exponentiative }

Exponentiative -> Factor { ExponentiativeOp Factor }

Factor -> Identifier | Literal | - Literal

Literal -> number | string | char | true | false | nil

ExponentiativeOp -> << | >>

MultiplicativeOp -> * | / | % | & | &* | &/ | &%

AdditiveOp -> + | -  | &+ | &- | pipe | ^

RangeOp -> ..< | ...

CastOp -> is | as

ComparativeOp -> == | < | > | <= | >= | != | === | !== | ~=

ConjunctiveOp -> &&

DisjunctiveOp -> doublepipe

NilCoalescingOp -> ??

TernaryOp -> ?

PrefixOps -> ++ | -- | ! | ~ | + | -

PostfixOps -> ++ | --

AssignmentOp -> =

ConditionalOp -> ? Expression :
