
First & follow symbols:
----------------------

Type
first:   ident "protocol" 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "," "." "&" "+" "-" 
         "is" "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ProtocolCompositionType
first:   "<" 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "," "." "&" "+" "-" 
         "is" "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

Identifier
first:   ident 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "<" ">" "," "." 
         "<<" ">>" "*" "/" "%" "&" "&*" "&/" "&%" "+" "-" "&+" "&-" "|" "^" 
         "..<" "..." "is" "as" "==" "<=" ">=" "!=" "===" "!==" "~=" "&&" "||" 
         "??" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ArrayDictionaryType
first:   "]" ":" 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "," "." "&" "+" "-" 
         "is" "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

FunctionType
first:   "->" 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "," "." "&" "+" "-" 
         "is" "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

OptionalType
first:   "?" 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "," "." "&" "+" "-" 
         "is" "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ImplicitlyUnwrappedOptionalType
first:   "!" 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "," "." "&" "+" "-" 
         "is" "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

MetatypeType
first:   "." 
follow:  ident number string char "[" "->" "]" ":" "?" "!" "," "." "&" "+" "-" 
         "is" "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ProtocolIdentifierList
first:   ident 
follow:  ">" 

ProtocolIdentifier
first:   ident 
follow:  ">" "," 

ExponentiativeOp
first:   "<<" ">>" 
follow:  ident number string char "-" "true" "false" "nil" 

MultiplicativeOp
first:   "*" "/" "%" "&" "&*" "&/" "&%" 
follow:  ident number string char "-" "true" "false" "nil" 

AdditiveOp
first:   "+" "-" "&+" "&-" "|" "^" 
follow:  ident number string char "-" "true" "false" "nil" 

RangeOp
first:   "..<" "..." 
follow:  ident number string char "-" "true" "false" "nil" 

CastOp
first:   "is" "as" 
follow:  ident number string char "-" "true" "false" "nil" 

ComparativeOp
first:   "<" ">" "==" "<=" ">=" "!=" "===" "!==" "~=" 
follow:  ident number string char "-" "true" "false" "nil" 

ConjunctiveOp
first:   "&&" 
follow:  ident number string char "-" "true" "false" "nil" 

DisjunctiveOp
first:   "||" 
follow:  ident number string char "-" "true" "false" "nil" 

NilCoalescingOp
first:   "??" 
follow:  ident number string char "-" "true" "false" "nil" 

TernaryOp
first:   "?" 
follow:  number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 

PrefixOps
first:   "!" "+" "-" "++" "--" "~" 
follow:  number string char "[" "." "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" "_" "true" "false" "nil" 

PostfixOps
first:   "++" "--" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

AssignmentOp
first:   "=" 
follow:  number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 

ConditionalOp
first:   "?" 
follow:  number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 

Expression
first:   number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 
follow:  number string char "[" "]" ":" "!" "," "." "&" "+" "-" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         ")" "_" "true" "false" "nil" "}" 

TypeCastOp
first:   "is" "as" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ExpressionList
first:   number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 
follow:  "]" "}" 

PrefixExpression
first:   number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

BinaryExpressions
first:   ident number string char "?" "-" "is" "as" "=" "true" "false" "nil" 
follow:  number string char "[" "]" ":" "!" "," "." "&" "+" "-" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         ")" "_" "true" "false" "nil" "}" 

PostfixExpression
first:   number string char "[" "." "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" "_" "true" "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

InOutExpression
first:   "&" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

BinaryExpression
first:   ident number string char "?" "-" "is" "as" "=" "true" "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

BinaryOp
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 

PrimaryExpression
first:   number string char "[" "." "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" "_" "true" "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

LiteralExpression
first:   number string char "[" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "true" "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

SelfExpression
first:   "self" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

SuperclassExpression
first:   "super" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ParenthesizedExpression
first:   "(" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ImplicitMemberExpression
first:   "." 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

WildcardExpression
first:   "_" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

Literal
first:   number string char "true" "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "<" ">" "," "." "<<" 
         ">>" "*" "/" "%" "&" "&*" "&/" "&%" "+" "-" "&+" "&-" "|" "^" "..<" 
         "..." "is" "as" "==" "<=" ">=" "!=" "===" "!==" "~=" "&&" "||" "??" 
         "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" 
         "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ArrayDictionary
first:   "[" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

SpecialLiteral
first:   "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ArrayDictionaryLiteral
first:   number string char "[" "]" "!" "." "&" "+" "-" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" ":]" "self" "super" 
         "(" "_" "true" "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ArrayDictionaryLiteralItems
first:   number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ArrayDictionaryLiteralItem
first:   number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ArrayItem
first:   "]" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

DictionaryItem
first:   ":" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ExpressionElementList
first:   ident number string char "[" "!" "." "&" "+" "-" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         "_" "true" "false" "nil" 
follow:  ")" 

ExpressionElement
first:   ident number string char "[" "!" "." "&" "+" "-" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         "_" "true" "false" "nil" 
follow:  "," ")" 

Postfix
first:   "[" "?" "!" "." "++" "--" "(" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

FunctionCallExpression
first:   "(" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

InitializerExpression
first:   "init" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ExplicitMemberExpression
first:   number 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

PostfixSelfExpression
first:   "self" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

DynamicTypeExpression
first:   "dynamicType" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

SubscriptExpression
first:   "[" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

ForcedValueExpression
first:   "!" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

OptionalChainingExpression
first:   "?" 
follow:  ident number string char "[" "]" ":" "?" "!" "," "." "&" "+" "-" "is" 
         "as" "++" "--" "~" "=" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" ")" "_" "true" "false" "nil" "}" 

Ternary
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "!" "." "&" "+" "-" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 

NilCoalescing
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "." "&" "+" "-" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         "_" "true" "false" "nil" 

Disjunctive
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "." "&" "+" "-" "??" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         "_" "true" "false" "nil" 

Conjuctive
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "." "&" "+" "-" "||" "??" "++" "--" 
         "~" "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" 
         "(" "_" "true" "false" "nil" 

Comparative
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "." "&" "+" "-" "&&" "||" "??" "++" 
         "--" "~" "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" 
         "super" "(" "_" "true" "false" "nil" 

Cast
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "<" ">" "." "&" "+" "-" "==" "<=" ">=" 
         "!=" "===" "!==" "~=" "&&" "||" "??" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 

Range
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "<" ">" "." "&" "+" "-" "is" "as" "==" 
         "<=" ">=" "!=" "===" "!==" "~=" "&&" "||" "??" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         "_" "true" "false" "nil" 

Additive
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "<" ">" "." "&" "+" "-" "..<" "..." 
         "is" "as" "==" "<=" ">=" "!=" "===" "!==" "~=" "&&" "||" "??" "++" 
         "--" "~" "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" 
         "super" "(" "_" "true" "false" "nil" 

Multiplicative
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "<" ">" "." "&" "+" "-" "&+" "&-" "|" 
         "^" "..<" "..." "is" "as" "==" "<=" ">=" "!=" "===" "!==" "~=" "&&" 
         "||" "??" "++" "--" "~" "__FILE__" "__LINE__" "__COLUMN__" 
         "__FUNCTION__" "self" "super" "(" "_" "true" "false" "nil" 

Exponentiative
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "<" ">" "." "*" "/" "%" "&" "&*" "&/" 
         "&%" "+" "-" "&+" "&-" "|" "^" "..<" "..." "is" "as" "==" "<=" ">=" 
         "!=" "===" "!==" "~=" "&&" "||" "??" "++" "--" "~" "__FILE__" 
         "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" "_" "true" 
         "false" "nil" 

Factor
first:   ident number string char "-" "true" "false" "nil" 
follow:  number string char "[" "?" "!" "<" ">" "." "<<" ">>" "*" "/" "%" "&" 
         "&*" "&/" "&%" "+" "-" "&+" "&-" "|" "^" "..<" "..." "is" "as" "==" 
         "<=" ">=" "!=" "===" "!==" "~=" "&&" "||" "??" "++" "--" "~" 
         "__FILE__" "__LINE__" "__COLUMN__" "__FUNCTION__" "self" "super" "(" 
         "_" "true" "false" "nil" 

TCDSwift
first:   "swift" 
follow:  EOF 

